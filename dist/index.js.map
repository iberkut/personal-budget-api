{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/logger.js","webpack:///./src/index.js","webpack:///external \"winston\"","webpack:///./src/app.js","webpack:///external \"path\"","webpack:///external \"serve-favicon\"","webpack:///external \"compression\"","webpack:///external \"helmet\"","webpack:///external \"cors\"","webpack:///external \"@feathersjs/feathers\"","webpack:///external \"@feathersjs/configuration\"","webpack:///external \"@feathersjs/express\"","webpack:///external \"@feathersjs/socketio\"","webpack:///./src/middleware/index.js","webpack:///./src/services/index.js","webpack:///./src/app.hooks.js","webpack:///./src/hooks/log.js","webpack:///external \"util\"","webpack:///./src/channels.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","createLogger","format","transports","logger","level","combine","splat","simple","Console","app","port","server","listen","process","on","reason","error","info","require","path","favicon","compress","helmet","cors","feathers","configuration","express","socketio","middleware","services","appHooks","channels","configure","use","json","urlencoded","extended","join","static","rest","notFound","errorHandler","hooks","log","before","all","find","update","patch","remove","after","util","context","debug","type","method","toJSON","inspect","colors","stack","channel","connection","authResult","_ref","leave","publish","data","hook","console"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const { createLogger, format, transports } = require('winston');\n\n// Configure the Winston logger. For the complete documentation see https://github.com/winstonjs/winston\nconst logger = createLogger({\n  // To see more detailed errors, change this to 'debug'\n  level: 'info',\n  format: format.combine(\n    format.splat(),\n    format.simple()\n  ),\n  transports: [\n    new transports.Console()\n  ],\n});\n\nmodule.exports = logger;\n","/* eslint-disable no-console */\nconst logger = require('./logger');\nconst app = require('./app');\nconst port = app.get('port');\nconst server = app.listen(port);\n\nprocess.on('unhandledRejection', (reason, p) =>\n  logger.error('Unhandled Rejection at: Promise ', p, reason)\n);\n\nserver.on('listening', () =>\n  logger.info('Feathers application started on http://%s:%d', app.get('host'), port)\n);\n","module.exports = require(\"winston\");","const path = require('path');\nconst favicon = require('serve-favicon');\nconst compress = require('compression');\nconst helmet = require('helmet');\nconst cors = require('cors');\nconst logger = require('./logger');\n\nconst feathers = require('@feathersjs/feathers');\nconst configuration = require('@feathersjs/configuration');\nconst express = require('@feathersjs/express');\nconst socketio = require('@feathersjs/socketio');\n\n\nconst middleware = require('./middleware');\nconst services = require('./services');\nconst appHooks = require('./app.hooks');\nconst channels = require('./channels');\n\nconst app = express(feathers());\n\n// Load app configuration\napp.configure(configuration());\n// Enable security, CORS, compression, favicon and body parsing\napp.use(helmet());\napp.use(cors());\napp.use(compress());\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\napp.use(favicon(path.join(app.get('public'), 'favicon.ico')));\n// Host the public folder\napp.use('/', express.static(app.get('public')));\n\n// Set up Plugins and providers\napp.configure(express.rest());\napp.configure(socketio());\n\n// Configure other middleware (see `middleware/index.js`)\napp.configure(middleware);\n// Set up our services (see `services/index.js`)\napp.configure(services);\n// Set up event channels (see channels.js)\napp.configure(channels);\n\n// Configure a middleware for 404s and the error handler\napp.use(express.notFound());\napp.use(express.errorHandler({ logger }));\n\napp.hooks(appHooks);\n\nmodule.exports = app;\n","module.exports = require(\"path\");","module.exports = require(\"serve-favicon\");","module.exports = require(\"compression\");","module.exports = require(\"helmet\");","module.exports = require(\"cors\");","module.exports = require(\"@feathersjs/feathers\");","module.exports = require(\"@feathersjs/configuration\");","module.exports = require(\"@feathersjs/express\");","module.exports = require(\"@feathersjs/socketio\");","// eslint-disable-next-line no-unused-vars\nmodule.exports = function (app) {\n  // Add your custom middleware here. Remember that\n  // in Express, the order matters.\n};\n","// eslint-disable-next-line no-unused-vars\nmodule.exports = function (app) {\n};\n","// Application hooks that run for every service\nconst log = require('./hooks/log');\n\nmodule.exports = {\n  before: {\n    all: [ log() ],\n    find: [],\n    get: [],\n    create: [],\n    update: [],\n    patch: [],\n    remove: []\n  },\n\n  after: {\n    all: [ log() ],\n    find: [],\n    get: [],\n    create: [],\n    update: [],\n    patch: [],\n    remove: []\n  },\n\n  error: {\n    all: [ log() ],\n    find: [],\n    get: [],\n    create: [],\n    update: [],\n    patch: [],\n    remove: []\n  }\n};\n","// A hook that logs service method before, after and error\n// See https://github.com/winstonjs/winston for documentation\n// about the logger.\nconst logger = require('../logger');\nconst util = require('util');\n\n// To see more detailed messages, uncomment the following line:\n// logger.level = 'debug';\n\nmodule.exports = function () {\n  return context => {\n    // This debugs the service call and a stringified version of the hook context\n    // You can customize the message (and logger) to your needs\n    logger.debug(`${context.type} app.service('${context.path}').${context.method}()`);\n    \n    if(typeof context.toJSON === 'function' && logger.level === 'debug') {\n      logger.debug('Hook Context', util.inspect(context, {colors: false}));\n    }\n    \n    if(context.error) {\n      logger.error(context.error.stack);\n    }\n  };\n};\n","module.exports = require(\"util\");","module.exports = function(app) {\n  if(typeof app.channel !== 'function') {\n    // If no real-time functionality has been configured just return\n    return;\n  }\n\n  app.on('connection', connection => {\n    // On a new real-time connection, add it to the anonymous channel\n    app.channel('anonymous').join(connection);\n  });\n\n  app.on('login', (authResult, { connection }) => {\n    // connection can be undefined if there is no\n    // real-time connection, e.g. when logging in via REST\n    if(connection) {\n      // Obtain the logged in user from the connection\n      // const user = connection.user;\n      \n      // The connection is no longer anonymous, remove it\n      app.channel('anonymous').leave(connection);\n\n      // Add it to the authenticated user channel\n      app.channel('authenticated').join(connection);\n\n      // Channels can be named anything and joined on any condition \n      \n      // E.g. to send real-time events only to admins use\n      // if(user.isAdmin) { app.channel('admins').join(connection); }\n\n      // If the user has joined e.g. chat rooms\n      // if(Array.isArray(user.rooms)) user.rooms.forEach(room => app.channel(`rooms/${room.id}`).join(channel));\n      \n      // Easily organize users by email and userid for things like messaging\n      // app.channel(`emails/${user.email}`).join(channel);\n      // app.channel(`userIds/$(user.id}`).join(channel);\n    }\n  });\n\n  // eslint-disable-next-line no-unused-vars\n  app.publish((data, hook) => {\n    // Here you can add event publishers to channels set up in `channels.js`\n    // To publish only for a specific event use `app.publish(eventname, () => {})`\n\n    console.log('Publishing all events to all authenticated users. See `channels.js` and https://docs.feathersjs.com/api/channels.html for more information.'); // eslint-disable-line\n\n    // e.g. to publish all service events to all authenticated users use\n    return app.channel('authenticated');\n  });\n\n  // Here you can also add service specific event publishers\n  // e.g. the publish the `users` service `created` event to the `admins` channel\n  // app.service('users').publish('created', () => app.channel('admins'));\n  \n  // With the userid and email organization from above you can easily select involved users\n  // app.service('messages').publish(() => {\n  //   return [\n  //     app.channel(`userIds/${data.createdBy}`),\n  //     app.channel(`emails/${data.recipientEmail}`)\n  //   ];\n  // });\n};\n"],"sourceRoot":""}